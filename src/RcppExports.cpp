// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// csample_char
CharacterVector csample_char(CharacterVector x, int size, bool replace, NumericVector prob);
RcppExport SEXP _corrp_csample_char(SEXP xSEXP, SEXP sizeSEXP, SEXP replaceSEXP, SEXP probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< bool >::type replace(replaceSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type prob(probSEXP);
    rcpp_result_gen = Rcpp::wrap(csample_char(x, size, replace, prob));
    return rcpp_result_gen;
END_RCPP
}
// randcluster
NumericVector randcluster(NumericMatrix m, int k);
RcppExport SEXP _corrp_randcluster(SEXP mSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(randcluster(m, k));
    return rcpp_result_gen;
END_RCPP
}
// which_in
std::vector<int> which_in(IntegerVector x, IntegerVector y);
RcppExport SEXP _corrp_which_in(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(which_in(x, y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_corrp_csample_char", (DL_FUNC) &_corrp_csample_char, 4},
    {"_corrp_randcluster", (DL_FUNC) &_corrp_randcluster, 2},
    {"_corrp_which_in", (DL_FUNC) &_corrp_which_in, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_corrp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
