// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;


double silhouette_main(Rcpp::List acca, NumericMatrix m) ;
Rcpp::List acca_main(Rcpp::NumericMatrix m , int k ,
                     int maxrep = 2, int maxiter = 100);


// acca_main
// ACCA main function iterates until for max_rep successive iteration no changes among clusters are found. Rcpp::List acca_main(Rcpp::NumericMatrix m, int k, int maxrep, int maxiter);
RcppExport SEXP _corrp_acca_main(SEXP mSEXP, SEXP kSEXP, SEXP maxrepSEXP, SEXP maxiterSEXP) {
  BEGIN_RCPP
  Rcpp::RObject rcpp_result_gen;
  Rcpp::RNGScope rcpp_rngScope_gen;
  Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type m(mSEXP);
  Rcpp::traits::input_parameter< int >::type k(kSEXP);
  Rcpp::traits::input_parameter< int >::type maxrep(maxrepSEXP);
  Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
  rcpp_result_gen = Rcpp::wrap(acca_main(m, k, maxrep, maxiter));
  return rcpp_result_gen;
  END_RCPP
}
// silhouette_main
// Silhouette clustering algorithm double silhouette_main(Rcpp::List acca, NumericMatrix m);
RcppExport SEXP _corrp_silhouette_main(SEXP accaSEXP, SEXP mSEXP) {
  BEGIN_RCPP
  Rcpp::RObject rcpp_result_gen;
  Rcpp::RNGScope rcpp_rngScope_gen;
  Rcpp::traits::input_parameter< Rcpp::List >::type acca(accaSEXP);
  Rcpp::traits::input_parameter< NumericMatrix >::type m(mSEXP);
  rcpp_result_gen = Rcpp::wrap(silhouette_main(acca, m));
  return rcpp_result_gen;
  END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
  {"_corrp_acca_main", (DL_FUNC) &_corrp_acca_main, 4},
  {"_corrp_silhouette_main", (DL_FUNC) &_corrp_silhouette_main, 2},
  {NULL, NULL, 0}
};

RcppExport void R_init_corrp(DllInfo *dll) {
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
}
